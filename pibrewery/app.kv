#:kivy 1.9
#:import chain itertools.chain
#:import Clock kivy.clock.Clock

<label>:
    font_size: dp(30)

ScreenManagement:
    id: sm
    name: 'screen manager'
    MainScreen:
    MashScreen:
    BrewScreen:
    FermentScreen:

<Graph@Widget>:
    max: 100
    min: 0
    values: []
    canvas:
        Color:
            rgba: 0.8, 0.1,0.1, .5
        Line:
            width: 10
            points: [0, 65, self.width, 65 ]
        Color:
            rgba: 0.1, 0.6,0.8, 1
        Line:
            width: 2
            points:
                list(chain(*
                [[
                self.x + x * self.width / len(self.values),
                self.y + (y-self.min) * self.height / (self.max - self.min)
                ] for x, y in enumerate(self.values)])) if self.values else []

<MainScreen>:
    id: main
    name: 'main'
    BoxLayout:
        orientation: 'vertical'
        padding: 20
        spacing: 20
        BoxLayout:
            id: layout
            spacing: 20
            Button:
                on_release: app.root.current = 'mash'
                text: 'Mash'
                font_size: 50
            Button:
                on_release: app.root.current = 'brew'
                text: 'Brew'
                font_size: 50
            Button:
                on_release: app.root.current = 'ferment'
                text: 'Ferment'
                font_size: 50
        Button:
            on_release: app.close()
            text: 'Close'
            font_size: 50
            size_hint: 1, 0.25

<MashScreen>:
    name: 'mash'
    Button:
        on_release: app.root.current = 'main'
        text: 'back to the home screen'
        font_size: 50

<BrewScreen>:
    name: 'brew'
    Button:
        on_release: app.root.current = 'main'
        text: 'back to the home screen'
        font_size: 50

<FermentScreen>:
    id: ferm_screen
    name: 'ferment'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint: 1, 0.2
            Label:
                size_hint: 1.2, 1
                text: 'Temperature'
            Label:
                text: app.current_temperature
            Label:
                size_hint: 0.4, 1
                text: 'F'
            ToggleButton:
                size_hint: 0.4, 1
                text: 'Start'
                on_state:
                    if self.state == 'down':Clock.schedule_interval(app.update_fermentation_plot, 1)
                    else:Clock.unschedule(app.update_fermentation_plot)
        BoxLayout:
            size_hint: 1, 0.2
            Label:
                size_hint: 1.2, 1
                text: 'Bubbles'
            Label:
                text: app.current_bubbles_minute
            Label:
                size_hint: 0.4, 1
                text: '/min'
            Button:
                size_hint: 0.4, 1
                on_release: app.root.current = 'main'
                text: 'Home'
        Graph:
            id: ferm_graph
            #ylabel: 'Temperature'
            x_grid: True
            y_grid: True
            y_ticks_major: 15
            x_ticks_major: 10
            max: app.temperature_max
            min: app.temperature_min
            values: app.temperature_values
